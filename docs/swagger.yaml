basePath: /
definitions:
  big.Int:
    type: object
  github_com_St3plox_Blogchain_business_core_like.Like:
    properties:
      id:
        type: string
      is_positive:
        type: boolean
      post_id:
        type: integer
      user_id:
        type: string
    type: object
  github_com_St3plox_Blogchain_business_core_media.Media:
    properties:
      fileBytes:
        items:
          type: integer
        type: array
      id:
        type: string
      length:
        type: integer
      name:
        type: string
      owner_id:
        type: string
    type: object
  github_com_St3plox_Blogchain_business_core_media.MediaData:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  github_com_St3plox_Blogchain_business_core_post.Category:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Blog
    - News
    - Article
  github_com_St3plox_Blogchain_business_core_post.NewPost:
    properties:
      category:
        $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.Category'
      content:
        type: string
      media_names:
        items:
          type: string
        type: array
      media_urls:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  github_com_St3plox_Blogchain_business_core_post.Post:
    properties:
      author:
        items:
          type: integer
        type: array
      category:
        $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.Category'
      content:
        type: string
      id:
        $ref: '#/definitions/big.Int'
      media:
        additionalProperties:
          type: string
        description: '[name]url'
        type: object
      tags:
        items:
          type: string
        type: array
      timestamp:
        $ref: '#/definitions/big.Int'
      title:
        type: string
    type: object
  github_com_St3plox_Blogchain_business_core_user.NewUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  github_com_St3plox_Blogchain_business_core_user.Role:
    properties:
      name:
        type: string
    type: object
  github_com_St3plox_Blogchain_business_core_user.User:
    properties:
      address_hex:
        type: string
      date_created:
        type: string
      date_updated:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password_hash:
        items:
          type: integer
        type: array
      private_key:
        items:
          type: integer
        type: array
      public_key:
        items:
          type: integer
        type: array
      roles:
        items:
          $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_user.Role'
        type: array
      secret_key:
        items:
          type: integer
        type: array
    type: object
  github_com_St3plox_Blogchain_business_core_user.UserCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  github_com_St3plox_Blogchain_business_web_v1.ErrorResponse:
    properties:
      error:
        type: string
      fields:
        additionalProperties:
          type: string
        type: object
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Blogchain server.
  license:
    name: MIT License
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Blogchain API
  version: "1.0"
paths:
  /v1/like:
    get:
      description: Retrieve likes by either user ID or post ID
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: Post ID
        in: query
        name: post_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_like.Like'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get likes by user ID or post ID
      tags:
      - likes
    post:
      consumes:
      - application/json
      description: Create a new like
      parameters:
      - description: Like object
        in: body
        name: like
        required: true
        schema:
          $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_like.Like'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_like.Like'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Create a like
      tags:
      - likes
  /v1/like/{id}:
    delete:
      description: Delete a like by its ID
      parameters:
      - description: Like ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Delete a like
      tags:
      - likes
    get:
      description: Retrieve a like by its ID
      parameters:
      - description: Like ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_like.Like'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get a like
      tags:
      - likes
    put:
      consumes:
      - application/json
      description: Update an existing like by its ID
      parameters:
      - description: Like ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated like object
        in: body
        name: like
        required: true
        schema:
          $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_like.Like'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_like.Like'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Update a like
      tags:
      - likes
  /v1/media:
    get:
      consumes:
      - application/json
      description: Retrieve multiple media files by their IDs
      parameters:
      - description: Array of Media IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_media.Media'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get multiple media files
      tags:
      - media
    post:
      consumes:
      - multipart/form-data
      description: Upload a new media file (image only)
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_media.MediaData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Upload a media file
      tags:
      - media
  /v1/media/{media_id}:
    delete:
      description: Delete a media file by its ID
      parameters:
      - description: Media ID
        in: path
        name: media_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Delete a media file
      tags:
      - media
    get:
      description: Retrieve a media file by its ID
      parameters:
      - description: Media ID
        in: path
        name: media_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_media.Media'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get a media file
      tags:
      - media
  /v1/media/many:
    post:
      consumes:
      - multipart/form-data
      description: Upload a new media file (image only)
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_media.MediaData'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Upload multiple media file
      tags:
      - media
  /v1/posts:
    get:
      description: Get all posts by a specific user address
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 100
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get posts of user who made the request
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a new post with title and content
      parameters:
      - description: New Post
        in: body
        name: newPost
        required: true
        schema:
          $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.NewPost'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Create a new post
      tags:
      - posts
  /v1/posts/{address}:
    get:
      description: Get all posts by a specific user address
      parameters:
      - description: User Address
        in: path
        name: address
        required: true
        type: string
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 100
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get posts by user address
      tags:
      - posts
  /v1/posts/{address}/{index}:
    get:
      description: Get a specific post by user address and index
      parameters:
      - description: User Address
        in: path
        name: address
        required: true
        type: string
      - description: Post Index
        in: path
        name: index
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get a post by user address and index
      tags:
      - posts
  /v1/posts/all:
    get:
      description: Get all posts with pagination
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 100
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get all posts
      tags:
      - posts
  /v1/posts/id/{id}:
    get:
      description: Get a specific post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_post.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Get a post by ID
      tags:
      - posts
  /v1/users/login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_user.UserCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Login a user
      tags:
      - users
  /v1/users/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: New User
        in: body
        name: newUser
        required: true
        schema:
          $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_user.NewUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_core_user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_St3plox_Blogchain_business_web_v1.ErrorResponse'
      summary: Register a new user
      tags:
      - users
securityDefinitions:
  jwtToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
